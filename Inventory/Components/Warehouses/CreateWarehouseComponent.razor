@using Entities
@using Business
@using FluentValidation
@using FluentValidation.Results
@inject IWarehouseBusiness _warehouseBusiness
@inject NavigationManager _navManager
@inject IValidator<WarehouseEntity> _warehouseValidator

<div>
    <EditForm Model="warehouse">
        <div class="form-group">
            <label class="form-label">Nombre: </label>
            <InputText @bind-Value="warehouse.WarehouseName" class="form-control" />
        </div>
        <div class="form-group">
            <label class="form-label">Dirección: </label>
            <InputText class="form-control" @bind-Value="warehouse.WarehouseAddress"/>
        </div>

        <br />

        <input type="button" value="Crear bodega" @onclick="CreateWarehouse" />
    </EditForm>
</div>

<ErrorsValidations errors="@errors" />

@code {
    WarehouseEntity warehouse = new WarehouseEntity()
    {
        WarehouseId = Guid.NewGuid()
    };

    List<ValidationFailure> errors = new List<ValidationFailure>();

    private void CreateWarehouse()
    {
        ValidationResult resultValidation = _warehouseValidator.Validate(warehouse);

        if(resultValidation.IsValid)
        {
            _warehouseBusiness.CreateWarehouse(warehouse);
            _navManager.NavigateTo("warehouse/list");
        }
        else
        {
            errors = resultValidation.Errors;
        }
    }

}

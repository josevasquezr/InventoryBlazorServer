@using Entities
@using Business
@using FluentValidation
@using FluentValidation.Results
@inject ICategoryBusiness _categoryBusiness
@inject NavigationManager _navManager
@inject IValidator<CategoryEntity> _categoryValidator

<div>
    <EditForm Model="category">
        <div class="form-group">
            <label class="form-label">Nombre: </label>
            <InputText class="form-control" @bind-Value="category.CategoryName" />
        </div>

        <br />

        <input type="button" value="Crear categoria" @onclick="CreateCategory" />
    </EditForm>
</div>

<br />

<ErrorsValidations errors=@errors />

@code {
    CategoryEntity category = new CategoryEntity()
    {
        CategoryId = Guid.NewGuid()
    };

    List<ValidationFailure> errors = new List<ValidationFailure>();

    private void CreateCategory()
    {
        ValidationResult validationResult = _categoryValidator.Validate(category);

        if (validationResult.IsValid)
        {
            _categoryBusiness.CreateCategory(category);
            _navManager.NavigateTo("category/list");
        }
        else
        {
            errors = validationResult.Errors;
        }
    }
}
